plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

project.ext.lwjglVersion = "3.4.0-SNAPSHOT"
project.ext.jomlPrimitivesVersion = "1.10.0"
project.ext.jomlVersion = "1.10.8"

group = 'dev.davidCMs.vkengine'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url "https://central.sonatype.com/repository/maven-snapshots" }
}

boolean linux = true;
boolean linux_arm64 = false;
boolean linux_riscv64 = false;

boolean windows = true;
boolean windows_arm64 = false

final List<String> natives = List.of(
    "natives-linux",
    "natives-linux-arm64",
    "natives-linux-riscv64",
    "natives-windows",
    "natives-windows-arm64"
);

final List<String> libs = List.of(
    "lwjgl",
    "lwjgl-assimp",
    "lwjgl-freetype",
    "lwjgl-glfw",
    "lwjgl-harfbuzz",
    "lwjgl-ktx",
    "lwjgl-meshoptimizer",
    "lwjgl-nuklear",
    "lwjgl-openal",
    "lwjgl-openxr",
    "lwjgl-par",
    "lwjgl-shaderc",
    "lwjgl-stb",
);

dependencies {

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.4'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.4'
    runtimeOnly 'com.fasterxml.jackson.core:jackson-databind:2.18.0'

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    for (String lib : libs)
        implementation "org.lwjgl:${lib}"

    implementation "org.joml:joml-primitives:${jomlPrimitivesVersion}"
    implementation "org.joml:joml:${jomlVersion}"
    implementation "org.lwjgl:lwjgl-vulkan"

    if (linux)
        for (String lib : libs)
            runtimeOnly "org.lwjgl:${lib}:$lwjglVersion:natives-linux"
    if (linux_arm64)
        for (String lib : libs)
            runtimeOnly "org.lwjgl:${lib}:$lwjglVersion:natives-linux-arm64"
    if (linux_riscv64)
        for (String lib : libs)
            runtimeOnly "org.lwjgl:${lib}:$lwjglVersion:natives-linux-riscv64"

    if (windows)
        for (String lib : libs)
            runtimeOnly "org.lwjgl:${lib}:$lwjglVersion:natives-windows"
    if (windows_arm64)
        for (String lib : libs)
            runtimeOnly "org.lwjgl:${lib}:$lwjglVersion:natives-windows-arm64"

}



jar {
    manifest {
        attributes(
                'Main-Class': 'dev.davidCMs.vkengine.Main'
        )
    }
}

test {
    useJUnitPlatform()
}